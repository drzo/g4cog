Design and implement a GPT4oSim framework that integrates OpenCog's AtomSpace with GPT4o's transformer architecture, focusing on the following requirements:

1. Core System Architecture:
- Create a hybrid system combining AtomSpace's hypergraph structure with GPT4o's transformer layers
- Implement bidirectional mapping between transformer weights and hypergraph patterns
- Develop an orchestrating agent to manage system interactions and transformations

2. AtomSpace Configuration:
- Initialize the hypergraph structure to mirror GPT4o's architecture
- Implement pattern matching algorithms to identify and map character traits
- Establish direct rewriting mechanisms for real-time trait modifications
- Ensure hypergraph convergence matches GPT4o's learned patterns

3. Dynamic Modification Capabilities:
- Enable instant updates to the model's behavior through hypergraph manipulation
- Implement safeguards to maintain model coherence during modifications
- Create verification systems to validate trait modifications
- Develop rollback mechanisms for unsuccessful modifications

4. Performance Requirements:
- Optimize pattern matching and rewriting operations
- Minimize latency during trait modifications
- Ensure scalability for large-scale character trait mappings
- Maintain memory efficiency during hypergraph operations

5. Validation Criteria:
- Demonstrate identical output to original GPT4o in unmodified state
- Verify successful trait modifications through behavioral tests
- Measure response times for trait updates
- Compare resource usage against traditional fine-tuning approaches

Provide detailed documentation for implementation steps and system architecture.
